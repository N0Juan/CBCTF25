#!/usr/bin/env python3

# Parse the memory dump
dump_lines = [
    "0000: 0xAB 0x2C 0x09 0xC3",
    "0001: 0x6E 0x23 0x22 0x45",
    "0002: 0x4E 0x30 0x4E 0x45",
    "0003: 0x6E 0x23 0x22 0x45",
    "0004: 0x10 0x32 0x13 0x29",
    "0005: 0x00 0x00 0x00 0x00",
    "0006: 0x7D 0x30 0x31 0x56",
    "0007: 0xB8 0x2A 0x9C 0xDE",
    "0008: 0x29 0x5E 0x6D 0x8F",
    "0009: 0x8A 0x57 0x01 0xBB",
    "0010: 0x0E 0xE9 0x20 0x65",
    "0011: 0xDD 0x9D 0x5A 0x32",
    "0012: 0x78 0x4E 0x31 0xE2",
    "0013: 0x93 0x3C 0x83 0xA0",
    "0014: 0x89 0x03 0x63 0x72",
    "0015: 0xCE 0xD1 0x07 0x2C",
    "0016: 0xF2 0x56 0x68 0x81",
    "0017: 0x54 0x5F 0x5A 0x51",
    "0018: 0x49 0x7D 0x2F 0x97",
    "0019: 0x34 0x5A 0x88 0x1C",
    "0020: 0xDA 0x32 0xE0 0x39",
    "0021: 0x19 0xD7 0x64 0xFD",
    "0022: 0xE1 0x28 0x99 0x42",
    "0023: 0xA2 0x31 0x75 0x0A",
    "0024: 0x5B 0x8A 0x2E 0xD3",
    "0025: 0xF9 0x4D 0x3F 0x08"
]

# Extract hex values
hex_bytes = []
for line in dump_lines:
    if "..." not in line:
        hex_part = line.split(": ")[1]
        for hex_str in hex_part.split():
            hex_bytes.append(int(hex_str, 16))

# XOR with key 0x13 (identified through analysis)
xor_key = 0x13
decoded = ''.join([chr(b ^ xor_key) for b in hex_bytes])

# Extract readable segments
print(f"Decoded: {decoded}")
# This reveals "GLIBZn<" among other segments

# The code is "GLIB"
code = "GLIB"
